     1                                  BOOT_LOAD equ 0x7C00
     2                                  ORG BOOT_LOAD
     3                                  
     4                                  ; ===================================
     5                                  ; マクロ
     6                                  ; ===================================
     7                                  %include "../include/macro.s"
     1                              <1> %macro cdecl 1-*.nolist
     2                              <1> 
     3                              <1>   %rep %0 - 1
     4                              <1>     push %{-1:-1}
     5                              <1>     %rotate -1
     6                              <1>   %endrep
     7                              <1>   %rotate -1
     8                              <1> 
     9                              <1>     call %1
    10                              <1> 
    11                              <1>   %if 1 < %0
    12                              <1>     add sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>   %endif
    14                              <1> 
    15                              <1> %endmacro
     8                                  
     9                                  ; ===================================
    10                                  ; エントリーポイント
    11                                  ; ===================================
    12                                  entry:
    13 00000000 EB58                      jmp ipl
    14                                  
    15                                    ; -------------------------
    16                                    ; BPB(BIOS Parameter Block)
    17                                    ; -------------------------
    18 00000002 90<rept>                  times 90 - ($ - $$) db 0x90
    19                                  
    20                                  ; ===================================
    21                                  ; IPL(Initial Program Loader)
    22                                  ; ===================================
    23                                  ipl:
    24 0000005A FA                        cli         ;割り込み禁止
    25 0000005B B80000                    mov ax, 0x0000
    26 0000005E 8ED8                      mov ds, ax
    27 00000060 8EC0                      mov es, ax
    28 00000062 8ED0                      mov ss, ax
    29 00000064 BC007C                    mov sp, BOOT_LOAD
    30                                  
    31 00000067 FB                        sti         ;割り込み許可
    32 00000068 8816[8400]                mov [BOOT.DRIVE], dl
    33                                  
    34 0000006C 68[7700]E8290083C4-       cdecl puts, .s0
    34 00000074 02                 
    35                                  
    36 00000075 EBFE                      jmp $
    37                                  
    38 00000077 426F6F74696E672E2E-     .s0 db "Booting...", 0x0A, 0x0D, 0 ; 0x0Aカーソルを行頭に, 0x0Dキャリッジリターン
    38 00000080 2E0A0D00           
    39                                  
    40                                  ALIGN 2, db 0
    41                                  
    42                                  BOOT:
    43 00000084 0000                    .DRIVE: dw 0
    44                                  
    45                                  ; ===================================
    46                                  ; モジュール
    47                                  ; ===================================
    48                                  %include "../modules/real/putc.s"
     1                              <1> putc:
     2                              <1>   ; -------------------
     3                              <1>   ; スタックフレームの構築
     4                              <1>   ; -------------------
     5 00000086 55                  <1>   push bp
     6 00000087 89E5                <1>   mov bp, sp
     7                              <1> 
     8                              <1>   ; -------------------
     9                              <1>   ; レジスタの保存
    10                              <1>   ; -------------------
    11 00000089 50                  <1>   push ax
    12 0000008A 53                  <1>   push bx
    13                              <1> 
    14                              <1>   ; -------------------
    15                              <1>   ; 処理の開始
    16                              <1>   ; -------------------
    17 0000008B 8A4604              <1>   mov al, [bp + 4]      ; 引数をalに
    18 0000008E B40E                <1>   mov ah, 0x0E           ; 文字出力
    19 00000090 BB0000              <1>   mov bx, 0x0000
    20 00000093 CD10                <1>   int 0x10
    21                              <1> 
    22                              <1>   ; -------------------
    23                              <1>   ; レジスタの復帰
    24                              <1>   ; -------------------
    25 00000095 5B                  <1>   pop bx
    26 00000096 58                  <1>   pop ax
    27                              <1> 
    28                              <1>   ; -------------------
    29                              <1>   ; スタックフレームの破棄
    30                              <1>   ; -------------------
    31 00000097 89EC                <1>   mov sp, bp
    32 00000099 5D                  <1>   pop bp
    33 0000009A C3                  <1>   ret
    49                                  %include "../modules/real/puts.s"
     1                              <1> puts:
     2                              <1>   ; -------------------
     3                              <1>   ; スタックフレームの構築
     4                              <1>   ; -------------------
     5 0000009B 55                  <1>   push bp
     6 0000009C 89E5                <1>   mov bp, sp
     7                              <1> 
     8                              <1>   ; -------------------
     9                              <1>   ; レジスタの保存
    10                              <1>   ; -------------------
    11 0000009E 50                  <1>   push ax
    12 0000009F 53                  <1>   push bx
    13 000000A0 56                  <1>   push si
    14                              <1> 
    15                              <1>   ; -------------------
    16                              <1>   ; 引数をsiに
    17                              <1>   ; -------------------
    18 000000A1 8B7604              <1>   mov si, [bp + 4]      ; 引数をalに
    19 000000A4 B40E                <1>   mov ah, 0x0E           ; 文字出力
    20 000000A6 BB0000              <1>   mov bx, 0x0000
    21                              <1> 
    22 000000A9 FC                  <1>   cld ;DF=0 //処理ごとにアドレスを足していく
    23                              <1> 
    24                              <1> .10L:
    25 000000AA AC                  <1>   lodsb
    26                              <1> 
    27 000000AB 3C00                <1>   cmp al, 0
    28 000000AD 7404                <1>   je .10E       ; al === 0 で終了
    29                              <1> 
    30 000000AF CD10                <1>   int 0x10      ; 出力
    31 000000B1 EBF7                <1>   jmp .10L      ; 次のアドレスに移動して処理を続ける
    32                              <1> 
    33                              <1> .10E:
    34                              <1>   ; -------------------
    35                              <1>   ; レジスタの復帰
    36                              <1>   ; -------------------
    37 000000B3 5E                  <1>   pop si
    38 000000B4 5B                  <1>   pop bx
    39 000000B5 58                  <1>   pop ax
    40                              <1> 
    41                              <1>   ; -------------------
    42                              <1>   ; スタックフレームの破棄
    43                              <1>   ; -------------------
    44 000000B6 89EC                <1>   mov sp, bp
    45 000000B8 5D                  <1>   pop bp
    46                              <1> 
    47 000000B9 C3                  <1>   ret
    50                                  
    51                                    ; -------------------------
    52                                    ; ブートフラグ
    53                                    ; -------------------------
    54 000000BA 00<rept>                  times 510 - ($ - $$) db 0x00
    55 000001FE 55AA                      db 0x55, 0xAA
